<svg height="2000px" width="100vw" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- text -->
    <g>
        <text x="15" y="30" fill="red">简单text：I love SVG</text>
        <text x="220" y="30" fill="none" stroke="red" font-size="35">描边但不填充text：I love SVG!</text>
        <text x="805" y="30" fill="pink" stroke="blue" font-size="35">描边且填充text：I love SVG!</text>
        <!-- text rotate -->
        <text x="15" y="130" fill="red" font-size="35" rotate="30">旋转一个维度text: I love SVG!</text>
        <text x="655" y="0" fill="red" font-size="25" transform="rotate(10,5,10)">旋转三个维度text：I love SVG!</text>
        <!-- text中的tspan -->
        <text x="15" y="250" fill="red" font-size="35">I Love
            <tspan fill="none" stroke="green">text里的tspan标签：SVG</tspan>!
        </text>
    </g>

    <!-- textPath -->
    <g>
        <path id="lineAC" d="M 30 420 q 150 -250 300 0" stroke="blue" stroke-width="2" fill="none" />
        <text style="fill:red;font-size:25px;">
            <textPath href="#lineAC" startOffset="20">textPath： I love SVG! I love SVG!</textPath>
        </text>
    </g>

    <!-- Link：a -->
    <!-- 如果直接使用href失效。可以在svg上添加xmlns:xlink="http://www.w3.org/1999/xlink"，在a标签上使用xlink:href -->
    <g>
        <a xlink:href="https://www.w3schools.com/graphics/" target="_blank">
            <text x="15" y="470" fill="red" font-size="25">I love SVG!</text>
        </a>
    </g>

    <!-- image -->
    <g>
        <!-- TODO 相对路径加载失败, 图片位于和svg同层 -->
        <image x="15" y="500" height="200" width="300" href="pulpitrock.jpg" />
        <image x="450" y="500" height="200" width="300" href="https://www.w3schools.com/graphics/pulpitrock.jpg" />
    </g>

    <!-- defs & marker -->
    <g>
        <defs>
            <!-- markerWidth 和 markerHeight：标记的宽度和高度 -->
            <!-- refX 和 refY 是针对被标记元素的，用于定义标记与被标记元素相交的点在被标记元素坐标系中的位置 -->
            <marker id="circle" markerWidth="8" markerHeight="8" refX="5" refY="5">
                <circle cx="5" cy="5" r="3" fill="black" />
            </marker>
            <marker id="arrow" markerWidth="10" markerHeight="10" refX="5" refY="5" orient="auto">
                <path d="M 0 0 L 10 5 L 0 10 z" fill="black" />
            </marker>
        </defs>
        <line x1="15" y1="750" x2="300" y2="950" stroke="red" stroke-width="3" marker-start="url(#circle)"
            marker-end="url(#arrow)" />
    </g>

    <!-- defs & filter -->
    <!-- 这段代码最终创建了一个颜色转换，且带有模糊和阴影效果的矩形，矩形的边框为绿色，填充为黄色，同时带有模糊和阴影效果。 -->
    <!-- feOffset 元素用于创建阴影效果，通过设置 dx 和 dy 属性来指定阴影在 x 和 y 方向上的偏移量。
         feGaussianBlur 元素用于创建模糊效果，通过设置 stdDeviation 属性来指定模糊的程度。
         feColorMatrix 元素用于进行颜色转换，通过设置 values 属性来指定颜色转换矩阵。
         feBlend 元素用于将原始图形和模糊后的图形进行混合，创建出模糊和阴影效果。
         除了以上元素以外还有很多filter的元素
     -->
    <g>
        <defs>
            <filter id="f1" width="120" height="120">
                <feOffset in="SourceGraphic" dx="20" dy="20" />
                <feGaussianBlur stdDeviation="10" />
                <feColorMatrix type="matrix" values="0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0" />
                <feBlend in="SourceGraphic" in2="offOut" />
            </filter>
        </defs>
        <rect x="15" y="1000" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
    </g>

    <!-- defs && gradients -->
    <!-- linearGradient -->
    <!-- Linear gradients can be defined as horizontal, vertical or angular gradients:
    Horizontal linear gradients (this is default) goes from left to right (where x1 and x2 differ and y1 and y2 are equal)
    Vertical linear gradients goes from top to bottom (where x1 and x2 are equal and y1 and y2 differ)
    Angular linear gradients are created when x1 and x2 differ and y1 and y2 differ -->
    <!-- radialGradient -->
    <g>
        <defs>
            <linearGradient id="grad2" x1="0%" x2="100%" y1="0%" y2="0%">
                <stop offset="0%" stop-color="yellow" />
                <stop offset="50%" stop-color="green" />
                <stop offset="100%" stop-color="red" />
            </linearGradient>
            <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
                <stop offset="0%" stop-color="red" />
                <stop offset="50%" stop-color="green" />
                <stop offset="100%" stop-color="blue" />
            </radialGradient>
        </defs>
        <ellipse cx="100" cy="1200" rx="85" ry="55" fill="url(#grad2)" />
        <ellipse cx="300" cy="1200" rx="85" ry="55" fill="url(#grad1)" />
    </g>

    
    <g>

    </g>
</svg>